define("ace/snippets/javascript_ls",["require","exports","module"],function(e,t,n){"use strict";t.snippetText="# Function\nsnippet function\n	function ${1?:fname}(${2?:arg}) {\n		${0:// body...}\n	}\nsnippet function =>\n	(${1:arg}) => ${0}\nsnippet async =>\n	async (${1:arg}) => ${0}\nsnippet async function\n	async function ${1?:fname}(${2?:arg}) {\n		${0:// body...}\n	}\n# if\nsnippet if\n	if (${1:true}) {\n		${0}\n	}\n# if ... else\nsnippet if .. else\n	if (${1:true}) {\n		${2}\n	} else {\n		${0}\n	}\n# tertiary conditional\nsnippet conditional\n	${1:/* condition */} ? ${2:a} : ${3:b}\n# switch\nsnippet switch\n	switch (${1:expression}) {\n		${0}\n	}\n# case\nsnippet case\n	case '${1:case}':\n		${2:// code}\n		break;\n	${3}\n# while (...) {...}\nsnippet while\n	while (${1:/* condition */}) {\n		${0:/* code */}\n	}\n# try\nsnippet try\n	try {\n		${0:/* code */}\n	} catch (e) {}\n# do...while\nsnippet do\n	do {\n		${2:/* code */}\n	} while (${1:/* condition */});\n# Object Method\nsnippet :function\nregex /([,{[])|^\\s*/:f/\n	${1:method_name}: function(${2:attribute}) {\n		${0}\n	}${3:,}\n# console.log (Firebug)\nsnippet log\n	console.log(${1});\n# return\nsnippet ret\n	return ${1:result}\n# for (property in object ) { ... }\nsnippet for loop\n	for (var ${1:prop} in ${2:Things}) {\n		${0:$2[$1]}\n	}\n# docstring\nsnippet /**\n	/**\n	 * ${1:description}\n	 *\n	 */\nsnippet @param\nregex /^\\s*\\*\\s*/@(para?m?)?/\n	@param {${1:type}} ${2:name} ${3:description}\nsnippet @ret\n	@return {${1:type}} ${2:description}\n# class\nsnippet class\n	class ${1:Name} {\n		constructor(${20}) {\n			${60:this.prop = \"\"}\n		}\n	}\n# for\nsnippet for\n	for (var ${1:i} = 0; $1 < ${2:Things}.length; $1++) {\n		${3:$2[$1]}$0\n	}\n# declaration\nsnippet var\n	var ${1:name} = ${0:value}\nsnippet let\n	let ${1:name} = ${0:value}\nsnippet const\n	const ${1:name} = ${0:value}\n",t.scope="javascript_ls"});                (function() {
                    window.require(["ace/snippets/javascript_ls"], function(m) {
                        if (typeof module == "object" && typeof exports == "object" && module) {
                            module.exports = m;
                        }
                    });
                })();
            